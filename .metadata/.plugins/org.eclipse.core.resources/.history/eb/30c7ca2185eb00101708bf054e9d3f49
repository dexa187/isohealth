package test.com.isobar.isohealth;

import java.util.ArrayList;
import java.util.List;

import com.isobar.isohealth.GraphConstants;
import com.isobar.isohealth.models.BackgroundActivity;
import com.isobar.isohealth.models.BackgroundActivityFeed;
import com.isobar.isohealth.models.Exercise;
import com.isobar.isohealth.models.GeneralMeasurement;
import com.isobar.isohealth.models.GeneralMeasurementFeed;
import com.isobar.isohealth.models.NewGeneralMeasurement;
import com.isobar.isohealth.models.NewStrengthTrainingActivity;
import com.isobar.isohealth.models.StrengthTrainingActivity;
import com.isobar.isohealth.models.StrengthTrainingActivityFeed;
import com.isobar.isohealth.models.Exercise.Set;
import com.isobar.isohealth.models.GeneralMeasurementFeed.Item;
import com.isobar.isohealth.services.BackgroundActivityService;
import com.isobar.isohealth.services.GeneralMeasurementService;
import com.isobar.isohealth.services.StrengthTrainingActivityService;

public class GeneralMeasurementServiceTest {
	public void testGeneralMeasurementFeed() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			System.out.println("BackgroundActivityFeed: " + generalMeasurementFeed.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void testGeneralMeasurement() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			List<GeneralMeasurement> generalMeasurementList =  new ArrayList<GeneralMeasurement>();
			for (Item item : generalMeasurementFeed.getItems()) {
				GeneralMeasurement generalMeasurement = GeneralMeasurementService.getGeneralMeasurement(item.getUri(),GraphConstants.AUTH_CODE);
				System.out.println("GeneralMeasurement: " + generalMeasurement.toString());
				generalMeasurementList.add(generalMeasurement);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void testUpdateGeneralMeasurement() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			for (Item item : generalMeasurementFeed.getItems()) {
				GeneralMeasurement generalMeasurement = GeneralMeasurementService.getGeneralMeasurement(item.getUri(),GraphConstants.AUTH_CODE);
				System.out.println("Original activity: " + generalMeasurement);
				generalMeasurement.setSystolic(125.0);
				GeneralMeasurementService.updateGeneralMeasurement(generalMeasurement, GraphConstants.AUTH_CODE);
				System.out.println("Updated GeneralMeasurement: " + generalMeasurement);
				break;
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}		
	
	public void testCreateNewGeneralMeasurement() {
		try {
		  NewGeneralMeasurement generalMeasurement = new NewGeneralMeasurement();
		  activity.setNotes("Quick noon workout");
		  activity.setPost_to_facebook(false);
		  activity.setPost_to_twitter(false);
		  activity.setStart_time("Sat, 1 Jan 2011 12:00:00");
		  Exercise[] exercises =  {new Exercise()};
		  exercises[0].setPrimary_muscle_group("Arms");
		  exercises[0].setPrimary_type("Dumbbell Curl");
		  exercises[0].setSecondary_type("hammer");
		  exercises[0].setRoutine("arms");
		  exercises[0].setNotes("This is the exercise");
		  Set[] sets = {new Set(), new Set()};
		  sets[0].setNotes("Good set");
		  sets[0].setRepetitions(10);
		  sets[0].setWeight(1.8);
		  sets[1].setRepetitions(10);
		  sets[1].setWeight(3.7);
		  exercises[0].setSets(sets);
		  activity.setExercises(exercises);
		  
		  StrengthTrainingActivityService.createStrengthTrainingActivity(activity, GraphConstants.AUTH_CODE);
		  
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
