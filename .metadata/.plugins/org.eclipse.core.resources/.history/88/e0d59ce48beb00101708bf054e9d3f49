package test.com.isobar.isohealth;

import java.util.ArrayList;
import java.util.List;

import junit.framework.TestCase;

import com.isobar.isohealth.GraphConstants;
import com.isobar.isohealth.models.GeneralMeasurement;
import com.isobar.isohealth.models.GeneralMeasurementFeed;
import com.isobar.isohealth.models.GeneralMeasurementFeed.Item;
import com.isobar.isohealth.models.NewGeneralMeasurement;
import com.isobar.isohealth.services.GeneralMeasurementService;

public class GeneralMeasurementServiceTest extends TestCase {
	public void testGeneralMeasurementFeed() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			System.out.println("BackgroundActivityFeed: " + generalMeasurementFeed.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void testGeneralMeasurement() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			List<GeneralMeasurement> generalMeasurementList =  new ArrayList<GeneralMeasurement>();
			for (Item item : generalMeasurementFeed.getItems()) {
				GeneralMeasurement generalMeasurement = GeneralMeasurementService.getGeneralMeasurement(item.getUri(),GraphConstants.AUTH_CODE);
				System.out.println("GeneralMeasurement: " + generalMeasurement.toString());
				generalMeasurementList.add(generalMeasurement);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void testUpdateGeneralMeasurement() {
		try {
			GeneralMeasurementFeed generalMeasurementFeed = GeneralMeasurementService.getGeneralMeasurementFeed(GraphConstants.AUTH_CODE);
			for (Item item : generalMeasurementFeed.getItems()) {
				GeneralMeasurement generalMeasurement = GeneralMeasurementService.getGeneralMeasurement(item.getUri(),GraphConstants.AUTH_CODE);
				generalMeasurement.setSystolic(125.0);
				System.out.println("Original activity: " + generalMeasurement);
				GeneralMeasurementService.updateGeneralMeasurement(generalMeasurement, GraphConstants.AUTH_CODE);
				System.out.println("Updated GeneralMeasurement: " + generalMeasurement);
				break;
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}		
	
	public void testCreateNewGeneralMeasurement() {
		try {
		  NewGeneralMeasurement generalMeasurement = new NewGeneralMeasurement();
		  
		  generalMeasurement.setDiastolic(70.0);
		  generalMeasurement.setTimestamp("Wed, 5 Jan 2011 07:03:00");
		  
		  GeneralMeasurementService.createGeneralMeasurement(generalMeasurement, GraphConstants.AUTH_CODE);
		  
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
